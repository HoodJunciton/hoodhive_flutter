name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]

env:
  FLUTTER_VERSION: '3.24.0'
  JAVA_VERSION: '17'

jobs:
  # Code Quality and Testing
  test:
    name: Test and Analyze
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: ${{ env.JAVA_VERSION }}
        
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'stable'
        cache: true
        
    - name: Get dependencies
      run: flutter pub get
      
    - name: Generate code
      run: flutter packages pub run build_runner build --delete-conflicting-outputs
      
    - name: Analyze code
      run: flutter analyze
      
    - name: Check formatting
      run: dart format --set-exit-if-changed .
      
    - name: Run tests
      run: flutter test --coverage
      
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: coverage/lcov.info
        token: ${{ secrets.CODECOV_TOKEN }}

  # Build Android
  build-android:
    name: Build Android
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' || github.event_name == 'release'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: ${{ env.JAVA_VERSION }}
        
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'stable'
        cache: true
        
    - name: Get dependencies
      run: flutter pub get
      
    - name: Generate code
      run: flutter packages pub run build_runner build --delete-conflicting-outputs
      
    - name: Decode keystore
      if: github.event_name == 'release'
      run: |
        echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > android/app/keystore.jks
        
    - name: Create key.properties
      if: github.event_name == 'release'
      run: |
        echo "storePassword=${{ secrets.KEYSTORE_PASSWORD }}" > android/key.properties
        echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
        echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties
        echo "storeFile=keystore.jks" >> android/key.properties
        
    - name: Build APK
      run: flutter build apk --release
      
    - name: Build App Bundle
      if: github.event_name == 'release'
      run: flutter build appbundle --release
      
    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: android-apk
        path: build/app/outputs/flutter-apk/app-release.apk
        
    - name: Upload App Bundle artifact
      if: github.event_name == 'release'
      uses: actions/upload-artifact@v4
      with:
        name: android-aab
        path: build/app/outputs/bundle/release/app-release.aab

  # Build iOS
  build-ios:
    name: Build iOS
    runs-on: macos-latest
    needs: test
    if: github.event_name == 'push' || github.event_name == 'release'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'stable'
        cache: true
        
    - name: Get dependencies
      run: flutter pub get
      
    - name: Generate code
      run: flutter packages pub run build_runner build --delete-conflicting-outputs
      
    - name: Build iOS
      run: flutter build ios --release --no-codesign
      
    - name: Archive iOS build
      run: |
        cd build/ios/iphoneos
        tar -czf ios-build.tar.gz Runner.app
        
    - name: Upload iOS artifact
      uses: actions/upload-artifact@v4
      with:
        name: ios-build
        path: build/ios/iphoneos/ios-build.tar.gz

  # Build Web
  build-web:
    name: Build Web
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' || github.event_name == 'release'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'stable'
        cache: true
        
    - name: Get dependencies
      run: flutter pub get
      
    - name: Generate code
      run: flutter packages pub run build_runner build --delete-conflicting-outputs
      
    - name: Build Web
      run: flutter build web --release
      
    - name: Upload Web artifact
      uses: actions/upload-artifact@v4
      with:
        name: web-build
        path: build/web/

  # Deploy to Firebase Hosting
  deploy-web:
    name: Deploy Web
    runs-on: ubuntu-latest
    needs: build-web
    if: github.event_name == 'release'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download Web artifact
      uses: actions/download-artifact@v4
      with:
        name: web-build
        path: build/web/
        
    - name: Deploy to Firebase Hosting
      uses: FirebaseExtended/action-hosting-deploy@v0
      with:
        repoToken: '${{ secrets.GITHUB_TOKEN }}'
        firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT }}'
        projectId: '${{ secrets.FIREBASE_PROJECT_ID }}'
        channelId: live

  # Create Release
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [build-android, build-ios, build-web]
    if: github.event_name == 'release'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      
    - name: Create release notes
      run: |
        echo "# HoodJunction Release $(date +%Y.%m.%d)" > release-notes.md
        echo "" >> release-notes.md
        echo "## Features" >> release-notes.md
        echo "- Offline-first architecture with local data caching" >> release-notes.md
        echo "- Firebase Authentication with phone OTP" >> release-notes.md
        echo "- Push notifications with FCM" >> release-notes.md
        echo "- Real-time data synchronization" >> release-notes.md
        echo "- Beautiful Material Design 3 UI" >> release-notes.md
        echo "" >> release-notes.md
        echo "## Technical Details" >> release-notes.md
        echo "- Flutter Version: ${{ env.FLUTTER_VERSION }}" >> release-notes.md
        echo "- Build Date: $(date)" >> release-notes.md
        echo "- Commit: ${{ github.sha }}" >> release-notes.md
        
    - name: Upload release assets
      uses: softprops/action-gh-release@v1
      with:
        files: |
          android-apk/app-release.apk
          android-aab/app-release.aab
          ios-build/ios-build.tar.gz
        body_path: release-notes.md
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Security Scan
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
        
    - name: Upload Trivy scan results
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: 'trivy-results.sarif'

  # Performance Testing
  performance-test:
    name: Performance Test
    runs-on: ubuntu-latest
    needs: build-android
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'stable'
        cache: true
        
    - name: Get dependencies
      run: flutter pub get
      
    - name: Generate code
      run: flutter packages pub run build_runner build --delete-conflicting-outputs
      
    - name: Run integration tests
      run: |
        if [ -d "integration_test" ]; then
          flutter test integration_test/ --reporter=json > test_results.json
        else
          echo "No integration tests found"
        fi
        
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: test_results.json